name: Build/Pub Release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:

          # linux
          - build: linux-64-gnu
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            sys-type: linux
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install linux needed deps
        if: matrix.sys-type == 'linux'
        shell: bash
        run: |
          if [ "${{ matrix.build }}" = "linux-aarch64-gnu" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi
      - name: Running cargo build
        shell: bash
        run: cargo build --release --target ${{ matrix.target }}

      - name: Make artifact folder
        shell: bash
        run: |
          binary_name="fluxa"

          dirname="$binary_name-${{ matrix.target }}"
          mkdir "$dirname"
          mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          overwrite: true
          name: fluxa-${{ matrix.target }}
          path: fluxa-${{ matrix.target }}

  release:
    needs: [build]
    name: Publish release
    runs-on: ubuntu-latest
    steps:

      - name: Download changelog file(s)
        uses: actions/checkout@v4
        with:
          sparse-checkout: .

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Generate checksums
        shell: bash
        run: |
          md5sum_file() {
            local file=$1
            local checksum=$(md5sum "$file" | awk '{print $1}')
            local filename=$(basename "$file")
            echo "$checksum : $filename" >> checksums.txt
          }
          rm -f checksums.txt
          find . -type f -name 'fluxa*' | while read file; do
            md5sum_file "$file"
          done

      - name: Show directory structure
        run: ls -R

      - name: Extract release notes
        run: echo ${{ github.sha }} > RELEASE_NOTE.txt

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          body_path: RELEASE_NOTE.txt
          files: |
            fluxa*
            checksums.txt
